/*===========================================================================*=
   CFP - Technique - Bus USB version HID  
   Modèle usbhid : Neuhaus J. adaptation du firmware Silicon Laboratories, Inc.
                   Modèle version 1.1 du 21 juin 2010. 
  -----------------------------------------------------------------------------                 

   Descriptif: Modèle usbhid.
               Exploitation du bus USB en version HID (mode interrupt) 
	       Dérivé du firmware pour le kit 8051F320, copyright 2005 
               Silicon Laboratories, Inc. (http://www.silabs.com) Release 1.3
    
               Communication via 2 Pipes (In & Out) en mode interrupt.
               Dispositif HID propriétaire. 
               USAGE simple composé d'une paquet de données de 64 bytes en 
               sortie est d'un paquet 64 bytes en entrée.
   
               L'interruption de l'usb est bloquée pendant l'actualisation 
               des buffers afin de maintenir la cohérence des données dans 
               la trame.		   
            
 ---- Déclarations spécifiques ------------------------------------------------

 Le buffer de réception & d'émission de l'application sont déclarés au niveau 
 des primitives usb de même que le flag signalant l'arrivée de nouvelle données 
 
 xdata BYTE ReceiveDataBuffer[EP2_PACKET_SIZE]; // Buffer données reçues
 xdata BYTE SendDataBuffer[EP1_PACKET_SIZE];    // Buffer données à envoyer
 bit fNewData;                                  // 1, Nouvelles données reçues
                                                // A quittancer par l'applic.

 ---- Exemple d'application ---------------------------------------------------

 Envoi de données: 
 ~~~~~~~~~~~~~~~~

 L'envoi de données se fait ponctuellement au moment opportun dans 
 l'application.

     //Actualisation des données dans le buffer 
     SendDataBuffer[0]  = 0x01;   //Première position du buffer  
     SendDataBuffer[63] = 0x01;   //Dernière position du buffer  
 
     //Envoi de la donnée
     Write_send_Packet (SendDataBuffer, sizeof(SendDataBuffer)); 


 Réception de données: 
 ~~~~~~~~~~~~~~~~~~~~~
 

     //Test si de nouvelle données ont été reçues
     if (fNewData)
     {  
         //Acquistion des données
         Read_receive_Packet(ReceiveDataBuffer, sizeof(ReceiveDataBuffer));
      
	 //Traitement des données reçus
         PremiereValeur = ReceiveDataBuffer[0];
         DerniereValeur = ReceiveDataBuffer[63];

         //Quittance la lecture des nouvelles données
         fNewData = 0; 

=*===========================================================================*/
