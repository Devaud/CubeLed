//-----------------------------------------------------------------------------
// F32x_USB_Primitives.h
//-----------------------------------------------------------------------------
// Copyright 2005 Silicon Laboratories, Inc.
// http://www.silabs.com
// FID:            32X000022
// Target:         C8051F32x
// Tool chain:     Keil C51 7.50 / Keil EVAL C51
// Release 1.3
// Adaptation pour modèle usbhid du cfpt : Neuhaus Jacques ( 30 juin 2010)
//----------------------------------------------------------------------------
#include "GlobalDef.h"
#include "F32x_USB_ISR.h"
#include "F32x_USB_Endpoint.h"

//--- Equivalence -------------------------------------------------------------
#define EUSB0 0x02    //Bit d'autorisation des interruptions de l'usb reg. EIE1

// Enlever le commentaire pour fonctionner en low speed 
//#define _USB_LOW_SPEED_              

//--- System clock ---
#define SYSCLK                   12000000    // SYSCLK frequency in Hz

// USB clock selections (SFR CLKSEL)
#define USB_4X_CLOCK             0x00        // Select 4x clock multiplier,
                                             // for USB Full Speed
#define USB_INT_OSC_DIV_2        0x10        // See Oscillators in Datasheet
#define USB_EXT_OSC              0x20
#define USB_EXT_OSC_DIV_2        0x30
#define USB_EXT_OSC_DIV_3        0x40
#define USB_EXT_OSC_DIV_4        0x50

// System clock selections (SFR CLKSEL)
#define SYS_INT_OSC              0x00        // Select to use internal osc.
#define SYS_EXT_OSC              0x01        // Select to use external osc.
#define SYS_4X_DIV_2             0x02

//--- Fonctions prototypes ----------------------------------------------------
extern void Sysclk_Init();                
extern void Usb0_Init();                  
extern void Write_send_Packet (char *ptrData, unsigned int size); 
extern void Read_receive_Packet (char *ptrData, unsigned int size); 
extern void Delay();        // ~ 80us/1ms respectivement Full/Low Speed

//--- Variables globales ------------------------------------------------------

//--- Pointeur sur buffer de la couche USB
//extern xdata BYTE OUT_PACKET[];  
//extern xdata BYTE IN_PACKET[];

//--- Buffer de données de la couche USB
//extern xdata BYTE Out_Packet[EP2_PACKET_SIZE]; // Last packet received from host
//extern xdata BYTE In_Packet[EP1_PACKET_SIZE];  // Next packet to sent to host

//--- Buffer de données de l'application
extern xdata BYTE ReceiveDataBuffer[EP2_PACKET_SIZE]; // Buffer données reçues
extern xdata BYTE SendDataBuffer[EP1_PACKET_SIZE];    // Buffer données à envoyer

//--- Flag indiquant que de nouvelles données ont été reçues
//extern bit fNewData;							


